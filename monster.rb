# どうして MonsterGenerator のようなものが必要なのだろう？

class Monster
  SPECIES = [
    # char, name, max_hp, exp, strength, defense, drop
    ['ス', 'スライム', 5, 1, 2, 1, 0.01],            # 弱い
    ['コ', 'コウモリ', 7, 2, 3, 1, 0.01],            # ふらふら
    ['オ', 'オオウミウシ', 7, 3, 2, 4, 0.01],        # 体当たり
    ['ツ', 'ツバメ', 5, 2, 3, 9, 0.01],              # 速い
    ['ワ', 'ワラビー', 8, 5, 4, 9, 0.01],            # 蹴ってくる
    ['催', '催眠術師', 16, 12, 6, 11, 0.33],         # 寝てる。眠らせる
    ['ピ', 'ピューシャン', 9, 5, 4, 15, 0.01],       # 矢を打つ
    ['フ', 'ファンガス', 17, 6, 6, 8, 0.16],         # 胞子で力を下げる
    ['グ', 'グール', 10, 7, 4, 15, 0.01],            # 増える
    ['木', '木乃伊', 16, 16, 10, 19, 0.01],          # 回復アイテムでダメージ
    ['ノ', 'ノーム', 20, 10, 0, 16,1.0],             # 金を盗む
    ['ハ', 'ハゲタカ', 27, 25, 10, 16, 0.16],        # クチバシが痛い
    ['ソ', 'ソーサラー', 23, 15, 10, 16, 0.01],      # 瞬間移動の杖を振る
    ['メ', 'メタルヨテイチ', 3, 500, 30, 49, 1.0],   # 回避性のレアモン
    ['お', 'おめん武者', 35, 40, 15, 26, 0.16],      # 鎧の中は空洞だ
    ['ア', 'アクアター', 30, 25, 0, 19, 0.01],       # ガッポーン。盾が錆びるぞ
    ['ど', 'どろぼう猫', 40, 20, 0, 17, 1.0],        # アイテムを盗む
    ['ガ', 'ガーゴイル', 45, 50, 18, 27, 0.33],      # 石像のふりをしている
    ['四', '四人トリオ', 60, 10, 11, 3, 0.0],        # 4人で固まって出現する
    ['白', '白い手', 72, 40, 7, 23, 0.0],            # つかまると倒すまで動けない
    ['ゴ', 'ゴーレム', 52, 180, 32, 27, 0.33],       # 巨大な泥人形
    ['ボ', 'ボンプキン', 70, 30, 12, 23, 0.01],      # 爆発する
    ['パ', 'パペット', 36, 40, 13, 23, 0.16],        # レベルを下げる
    ['ゆ', 'ゆうれい', 60, 150, 17, 27, 0.0],        # 見えない。ふらふら
    ['ミ', 'ミミック', 50, 30, 24, 24, 0.0],         # アイテム・階段に化ける
    ['ト', 'トロール', 51, 380, 51, 21, 0.16],       # 強い
    ['目', '目玉', 62, 250, 31, 27, 0.16],
    ['化', '化け狸', 80, 20, 9, 14, 0.0],            # 別のモンスターに化ける
    ['土', '土偶', 70, 150, 17, 24, 0.0],            # HP、ちから最大値を下げる
    ['デ', 'デビルモンキー', 78, 600, 26, 25, 0.16], # 二倍速
    ['マ', 'マルスボース', 75, 750, 51, 29, 0.16],   # 強い
    ['竜', '竜', 100, 3000, 68, 30, 0.75],           # テラ強い。火を吐く
  ]

  class << self
    def make_monster(name)
      row = SPECIES.find { |r| r[1] == name }
      fail "no such monster: #{name}" if row.nil?

      char, name, max_hp, strength, defense, exp = row
      return Monster.new(char, name, max_hp, strength, defense, exp)
    end
  end

  attr :char, :name, :max_hp, :strength, :defense, :exp

  def initialize(char, name, max_hp, strength, defense, exp)
    @char     = char
    @name     = name
    @max_hp   = max_hp
    @strength = strength
    @defense  = defense
    @exp      = exp
  end
end

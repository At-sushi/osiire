module CharacterLevel
  module_function

  EXP_LV_TABLE = [
    [0, 1],
    [10, 2],
    [30, 3],
    [60, 4],
    [100, 5],
    [160, 6],
    [250, 7],
    [370, 8],
    [530, 9],
    [730, 10],
    [970, 11],
    [1_300, 12],
    [1_600, 13],
    [2_000, 14],
    [2_400, 15],
    [2_900, 16],
    [3_500, 17],
    [4_200, 18],
    [5_000, 19],
    [6_000, 20],
    [7_000, 21],
    [8_000, 22],
    [10_000, 23],
    [13_000, 24],
    [17_000, 25],
    [22_000, 26],
    [28_000, 27],
    [35_000, 28],
    [43_000, 29],
    [52_000, 30],
    [62_000, 31],
    [73_000, 32],
    [85_000, 33],
    [100_000, 34],
    [120_000, 35],
    [150_000, 36],
    [180_000, 37],
    [210_000, 38],
    [240_000, 39],
    [270_000, 40],
    [300_000, 41],
    [350_000, 42],
    [400_000, 43],
    [450_000, 44],
    [500_000, 45],
    [550_000, 46],
    [600_000, 47],
    [650_000, 48],
    [700_000, 49],
    [750_000, 50],
    [800_000, 51],
    [850_000, 52],
    [900_000, 53],
    [950_000, 54],
    [1_000_000, 55],
    [1_050_000, 56],
    [1_100_000, 57],
    [1_150_000, 58],
    [1_200_000, 59],
    [1_250_000, 60],
    [1_310_000, 61],
    [1_370_000, 62],
    [1_430_000, 63],
    [1_490_000, 64],
    [1_550_000, 65],
    [1_610_000, 66],
    [1_670_000, 67],
    [1_730_000, 68],
    [1_790_000, 69],
    [1_850_000, 70],
    [1_910_000, 71],
    [1_970_000, 72],
    [2_030_000, 73],
    [2_090_000, 74],
    [2_150_000, 75],
    [2_210_000, 76],
    [2_270_000, 77],
    [2_330_000, 78],
    [2_390_000, 79],
    [2_450_000, 80],
    [2_510_000, 81],
    [2_570_000, 82],
    [2_630_000, 83],
    [2_690_000, 84],
    [2_750_000, 85],
    [2_810_000, 86],
    [2_870_000, 87],
    [2_930_000, 88],
    [2_990_000, 89],
    [3_050_000, 90],
    [3_110_000, 91],
    [3_170_000, 92],
    [3_230_000, 93],
    [3_290_000, 94],
    [3_350_000, 95],
    [3_410_000, 96],
    [3_470_000, 97],
    [3_530_000, 98],
    [3_590_000, 99],
  ]

  def lv_to_exp(level)
    EXP_LV_TABLE.each do |e, lv|
      if level == lv
        return e
      end
    end
    return nil
  end

  def exp_to_lv(exp)
    last_lv = nil
    EXP_LV_TABLE.each do |e, lv|
      if exp < e
        return last_lv
      end
      last_lv = lv
    end
    return last_lv
  end

  LAST_LEVEL = 99

  def lv_to_attack(lv)
    fail TypeError unless lv.is_a? Numeric
    return Math.log(lv.fdiv(2)+1, 1.6)**2
  end

end
